{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u524D\\u7AEF\\u5B66\\u4E60\\\\react\\u7EC3\\u4E60\\\\learn_log\\\\src\\\\Components\\\\Logs\\\\Logs.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport LogFilter from \"./LogFilter/LogFilter\";\nimport LogItem from \"./LogItem/LogItem\";\nimport './Logs.css';\nimport Card from \"./UI/Card/Card\"; // 日志的容器\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Logs = props => {\n  _s();\n\n  // 创建一个存储年份的state\n  const [year, setYear] = useState(2022); // 过滤数据，只显示某一年的数据\n\n  let filterData = props.logsData.filter(item => item.date.getFullYear() === year); // 创建一个修改年份的函数\n\n  const changeYearHandler = year => {\n    setYear(year);\n  }; // {/* 模拟一组从服务器中加载的数据 */}\n  // {/* 将数据放入JSX中 */}\n\n\n  let logItemData = filterData.map((item, index) => /*#__PURE__*/_jsxDEV(LogItem, {\n    onDelLog: () => props.onDelLog(index),\n    date: item.date,\n    desc: item.desc,\n    time: item.time\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 59\n  }, this));\n\n  if (logItemData.length === 0) {\n    logItemData = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-logs\",\n      children: \"\\u6CA1\\u6709\\u627E\\u5230\\u65E5\\u5FD7\\uFF01\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 27\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"logs\",\n    children: [/*#__PURE__*/_jsxDEV(LogFilter, {\n      year: year,\n      onYearChange: changeYearHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), logItemData]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 16\n  }, this);\n};\n\n_s(Logs, \"4MfM5/iBswbrArCeWCUMQASJEwQ=\");\n\n_c = Logs;\nexport default Logs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"names":["useState","LogFilter","LogItem","Card","Logs","props","year","setYear","filterData","logsData","filter","item","date","getFullYear","changeYearHandler","logItemData","map","index","onDelLog","desc","time","id","length"],"sources":["E:/前端学习/react练习/learn_log/src/Components/Logs/Logs.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport LogFilter from \"./LogFilter/LogFilter\";\r\nimport LogItem from \"./LogItem/LogItem\";\r\nimport './Logs.css';\r\nimport Card from \"./UI/Card/Card\";\r\n\r\n// 日志的容器\r\nconst Logs = (props) => {\r\n\r\n    // 创建一个存储年份的state\r\n    const [year, setYear] = useState(2022);\r\n\r\n    // 过滤数据，只显示某一年的数据\r\n    let filterData = props.logsData.filter(item => item.date.getFullYear() === year);\r\n\r\n    // 创建一个修改年份的函数\r\n    const changeYearHandler = (year) => {\r\n        setYear(year);\r\n    };\r\n\r\n        // {/* 模拟一组从服务器中加载的数据 */}\r\n        \r\n        // {/* 将数据放入JSX中 */}\r\n        let logItemData = filterData.map((item, index) => <LogItem onDelLog={() => props.onDelLog(index)} key={item.id} date={item.date} desc={item.desc} time={item.time}/>);\r\n\r\n        if (logItemData.length === 0) {\r\n            logItemData = <p className=\"no-logs\">没有找到日志！</p>;\r\n        }\r\n        return <Card className=\"logs\">\r\n                 {/* 引入年份的选择组件 */}\r\n                <LogFilter year={year} onYearChange={changeYearHandler}/>\r\n                {logItemData}\r\n                 {/* logItemData.length !== 0 ? logItemData : <p className=\"no-logs\">没有找到日志！</p> */}\r\n        </Card>\r\n};\r\nexport default Logs;"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAO,YAAP;AACA,OAAOC,IAAP,MAAiB,gBAAjB,C,CAEA;;;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EAAA;;EAEpB;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC,CAHoB,CAKpB;;EACA,IAAIQ,UAAU,GAAGH,KAAK,CAACI,QAAN,CAAeC,MAAf,CAAsBC,IAAI,IAAIA,IAAI,CAACC,IAAL,CAAUC,WAAV,OAA4BP,IAA1D,CAAjB,CANoB,CAQpB;;EACA,MAAMQ,iBAAiB,GAAIR,IAAD,IAAU;IAChCC,OAAO,CAACD,IAAD,CAAP;EACH,CAFD,CAToB,CAahB;EAEA;;;EACA,IAAIS,WAAW,GAAGP,UAAU,CAACQ,GAAX,CAAe,CAACL,IAAD,EAAOM,KAAP,kBAAiB,QAAC,OAAD;IAAS,QAAQ,EAAE,MAAMZ,KAAK,CAACa,QAAN,CAAeD,KAAf,CAAzB;IAA8D,IAAI,EAAEN,IAAI,CAACC,IAAzE;IAA+E,IAAI,EAAED,IAAI,CAACQ,IAA1F;IAAgG,IAAI,EAAER,IAAI,CAACS;EAA3G,GAAqDT,IAAI,CAACU,EAA1D;IAAA;IAAA;IAAA;EAAA,QAAhC,CAAlB;;EAEA,IAAIN,WAAW,CAACO,MAAZ,KAAuB,CAA3B,EAA8B;IAC1BP,WAAW,gBAAG;MAAG,SAAS,EAAC,SAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAd;EACH;;EACD,oBAAO,QAAC,IAAD;IAAM,SAAS,EAAC,MAAhB;IAAA,wBAEC,QAAC,SAAD;MAAW,IAAI,EAAET,IAAjB;MAAuB,YAAY,EAAEQ;IAArC;MAAA;MAAA;MAAA;IAAA,QAFD,EAGEC,WAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAMP,CA3BD;;GAAMX,I;;KAAAA,I;AA4BN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}